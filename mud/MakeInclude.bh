#  -*-Makefile-*-"

PROG_HOME=${MUD_HOME}

#  A common place IN YOUR PATH where tools can be put
TOOL_BIN_DIR=${HOME}/bin

#  This is the version of the make utility you wish to use.
#  On some systems (BSD?) you might want this to be gmake.
#MAKE=gmake
MAKE=make


# TODO:  Choose these flags in the ./configure script.

# NOTE:  Use these variables if you are using EGCS and glibc 5
CCFLAGS = -g -D_GNU_SOURCE $(BG_NEW_GCC_TEMPLATES) $(GUIDING_DECLS) $(HUGE_OBJECTS) \
          -Wall -Wno-deprecated -I$(MUD_HOME)/include
LDLIBS =  -lm -lstring2 -lbitfield -lcrypt #-lnsl # -lsocket


# NOTE:  For Cygwin users:
#        Add this flag (say, after -g) for Cygwin compiles:  -Wno-error
#        You also need to install the lib-crypt library.


# This one works on some modern Slackware systems.
#CCFLAGS = -g -D_GNU_SOURCE -fguiding-decls\
#          -Wall -I$(MUD_HOME)/include
#LDLIBS =  -lm -lstring2 -lbitfield #-lcrypt #-lnsl # -lsocket


#  Use Electric fence to find memory problems.
#  Comment these two out for production code (these bloat the hell
#  out of your code..you'll need 150MB of RAM/swap to run the binary)!!
#   --Ben
#CCFLAGS = -g -D_GNU_SOURCE -DUSE_SEMAPHORE -fguiding-decls\
#          -Wall -I$(MUD_HOME)/include
#LDFLAGS =  -L/home/greear/lib -L$(MUD_HOME)/lib #linker flaggs
#LDLIBS =  -lefence -lpthread -lm -lstring2 -lbitfield -lcrypt #-lnsl # -lsocket


# NOTE:  Uncomment these if you are using the older g++ and/or libc5
#CCFLAGS = -g -Wall -I$(MUD_HOME)/include #compiler flags-fguiding-decl
#LDLIBS =  -lm -lstring2 -lbitfield #-lnsl # -lsocket


# Here's some hints that should give you markedly better performance,
# though a loss of debugging information.
#
#  Replace the -g with -O6 -fomit-frame-pointer
#
#  It will take longer to compile, but will use much less memory and will
#  run faster.  It will also have NO debugging info to speak of (at least
#  not in the core file, should it produce one.)
# (NOTE:  I haven't tested these, but one person was very pleased with
#         the results and suggested them.) --BEN

# Uncomment these lines if MySQL is available to store the data files
#LDLIBS += -lmysqlclient
#CCFLAGS += -DUSEMYSQL


###################################################
#  Normally won't have to configure under here...
###################################################


CUR_DATE=`date '+%y.%m.%d'`

#  For distribution purposes  (This is the stable branch now.)
SCRY_VERSION=2.1.8
HEGEMON_VERSION=2.1.8

LDFLAGS =  -L$(MUD_HOME)/lib #linker flaggs

#  Other compilers may work, but I haven't tested with them.
#  I don't suppose it could hurt to try though!
CC = g++       # this is generally the c compiler, unused AFAIK
CCC = g++      # this is generally the c++ compiler
